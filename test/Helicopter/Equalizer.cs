using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Media;

namespace Helicopter
{
	internal class Equalizer
	{
		private bool visible_;

        private VisualizationData visualizationData_;
        private float[] visualizationDataA_ = new float[826]
         {
        9.201338f, 11.44847f, 7.39814472f, 7.03962374f, 9.142147f, 10.2057858f, 8.978097f, 9.114546f, 9.615604f, 9.77862549f,
        5.536645f, 4.94635963f, 8.619459f, 9.160499f, 9.685738f, 12.14972f, 11.2068262f, 9.940975f, 7.938308f, 8.257543f,
        6.916685f, 7.127015f, 7.709695f, 8.244675f, 8.012174f, 8.905652f, 8.725481f, 9.45215f, 5.2481575f, 3.34073544f,
        6.71833038f, 7.674507f, 8.008017f, 8.619373f, 8.031424f, 7.15285158f, 8.637546f, 10.3784847f, 11.763382f, 12.18576f,
        11.6731319f, 12.1314707f, 7.39167452f, 7.766352f, 8.0821f, 10.332551f, 8.972048f, 9.197437f, 4.83940935f, 4.08461475f,
        4.74029541f, 5.056829f, 6.52950239f, 9.026337f, 13.0792284f, 14.3607779f, 9.743609f, 8.504019f, 9.335712f, 9.387383f,
        12.1734228f, 13.6369734f, 9.382739f, 8.256953f, 12.8574505f, 12.8764782f, 11.6940041f, 11.0994291f, 10.984457f, 12.1157875f,
        6.7193675f, 5.84468651f, 7.813481f, 9.278781f, 7.02463531f, 6.10984564f, 9.553684f, 11.3622932f, 10.0636616f, 10.5872154f,
        11.2670393f, 12.5753918f, 7.296133f, 6.956784f, 6.529023f, 7.10553741f, 8.047164f, 8.621248f, 8.480272f, 8.946172f,
        9.878538f, 7.61445427f, 8.756296f, 12.2120256f, 9.489453f, 8.612598f, 5.268303f, 2.495404f, 4.60608244f, 3.77866459f,
        5.933162f, 5.75009155f, 5.807801f, 5.363972f, 6.94094038f, 7.727879f, 6.175001f, 6.78481531f, 8.18450451f, 9.179356f,
        9.639146f, 9.922573f, 6.76603f, 5.354427f, 5.709664f, 6.15679264f, 5.77945232f, 5.997538f, 8.232329f, 9.459099f,
        5.90454531f, 5.542434f, 6.26086f, 6.478939f, 8.947456f, 9.059802f, 10.3705864f, 10.245677f, 10.4109144f, 7.24894333f,
        9.611929f, 9.591221f, 9.693314f, 9.499695f, 13.7075014f, 16.2211418f, 9.15794f, 6.721342f, 6.114417f, 7.08206463f,
        9.020931f, 10.542223f, 4.66488266f, 3.02583122f, 4.15554571f, 6.480798f, 6.902322f, 7.50465775f, 6.65035f, 6.72723436f,
        8.061351f, 9.69146f, 8.931472f, 9.578937f, 7.776911f, 9.612079f, 5.888055f, 7.43564129f, 7.698119f, 8.659969f,
        9.488178f, 11.0472021f, 7.92409468f, 6.89699268f, 8.529358f, 8.475336f, 10.5471172f, 10.4417381f, 10.5844707f, 9.75978f,
        7.68164158f, 6.83080339f, 5.596246f, 6.1625433f, 13.0392771f, 16.963253f, 7.54644966f, 5.189826f, 6.083322f, 8.15283f,
        9.73404f, 9.841603f, 6.98780632f, 5.96134853f, 6.177021f, 5.48012f, 5.491109f, 5.14953947f, 6.51853275f, 7.397136f,
        4.92824173f, 4.517161f, 10.1778288f, 9.759649f, 8.716169f, 8.079926f, 7.082222f, 7.419798f, 6.986679f, 7.15249443f,
        7.27125645f, 7.19359827f, 6.804953f, 7.22606134f, 7.038677f, 9.755129f, 8.673431f, 7.473563f, 5.831924f, 5.465224f,
        5.36954737f, 7.05704165f, 8.17098f, 8.542671f, 8.936882f, 9.372936f, 7.19617271f, 5.646919f, 6.02694f, 5.892794f,
        8.159174f, 8.51313f, 7.76464128f, 9.090626f, 10.62107f, 12.9468241f, 10.6245737f, 9.140506f, 12.01922f, 13.51895f,
        8.098683f, 6.023323f, 6.52651453f, 7.818659f, 7.31152058f, 7.7614603f, 7.995544f, 10.4998522f, 8.5583f, 8.49097f,
        13.8334675f, 16.62253f, 8.601709f, 5.83960533f, 7.024907f, 7.315115f, 9.271525f, 9.553781f, 7.472138f, 7.68361044f,
        6.964529f, 6.17653942f, 8.72472f, 9.39514351f, 8.272412f, 9.535155f, 10.0759068f, 9.486687f, 9.84392f, 11.1922407f,
        9.814748f, 9.06905651f, 7.13688564f, 7.59254742f, 9.619216f, 11.1433992f, 7.6617856f, 6.38337135f, 7.399685f, 7.88678741f,
        6.45270348f, 6.45798826f, 7.75380564f, 8.30775f, 7.856909f, 7.859461f, 6.349235f, 7.49685955f, 9.404503f, 9.22022152f,
        8.899948f, 7.531667f, 6.24099064f, 5.694261f, 4.796911f, 3.84024239f, 5.86351776f, 5.422628f, 11.0481052f, 13.964304f,
        9.026748f, 9.854018f, 8.460445f, 8.462017f, 9.78204f, 10.155673f, 7.53538752f, 6.474336f, 6.75394f, 6.82043743f,
        7.239109f, 8.153852f, 9.279386f, 10.6956453f, 9.465374f, 8.618093f, 10.4177408f, 11.2765779f, 10.9574394f, 11.4173594f,
        9.23942852f, 9.428846f, 9.905973f, 10.1495647f, 9.845106f, 9.823796f, 8.080461f, 8.473296f, 9.09892f, 11.1168966f,
        6.246746f, 5.637609f, 8.41582f, 10.2301588f, 4.94782734f, 3.07875872f, 5.327421f, 5.378579f, 6.32867527f, 6.51636744f,
        10.0539007f, 11.5667076f, 8.713588f, 9.360068f, 15.24948f, 18.3743668f, 8.736329f, 5.654608f, 8.802928f, 10.7923164f,
        11.0058765f, 8.40922451f, 6.94275f, 6.87695074f, 7.34413052f, 8.274622f, 11.2402325f, 13.0262918f, 7.51385975f, 5.0200963f,
        4.34576035f, 4.52464342f, 8.632911f, 11.5356455f, 6.68834543f, 5.43287039f, 6.24997568f, 7.48663664f, 11.1286755f, 12.6062994f,
        14.22421f, 16.4252739f, 11.3949127f, 8.632041f, 8.1845665f, 10.7902985f, 9.924806f, 9.504165f, 10.0318575f, 9.873653f,
        8.006612f, 7.23508263f, 8.389906f, 9.398786f, 11.0192118f, 12.8051949f, 7.41087341f, 5.52363825f, 8.34398651f, 9.840357f,
        10.4597645f, 10.87064f, 11.12659f, 10.4314356f, 8.70348f, 8.042725f, 9.555948f, 9.788337f, 8.77272f, 7.27282f,
        7.11464453f, 6.41080427f, 8.887569f, 10.01677f, 10.8972273f, 12.0669508f, 9.639608f, 9.532613f, 9.700472f, 11.7466154f,
        10.86064f, 10.3467407f, 11.1477489f, 9.57623f, 9.705515f, 9.8671875f, 10.3080425f, 11.52389f, 12.2874432f, 12.2683887f,
        12.5640354f, 12.7154779f, 13.1029787f, 12.5745831f, 11.0999346f, 11.4056549f, 8.577449f, 8.188853f, 10.4696379f, 9.465245f,
        10.6597185f, 10.4009924f, 13.0455294f, 13.88648f, 11.2679338f, 9.591735f, 11.7610788f, 11.27151f, 14.0648117f, 17.2196f,
        13.25318f, 13.5746269f, 11.7297535f, 9.754845f, 11.4180412f, 13.4891338f, 12.8485279f, 11.941411f, 8.229985f, 8.210833f,
        9.672551f, 11.2738018f, 10.04187f, 11.1138258f, 11.3685265f, 13.6119251f, 9.246092f, 6.05700064f, 7.53021574f, 7.15556431f,
        7.04926f, 8.27468f, 9.07256f, 8.731984f, 11.0589437f, 12.0294008f, 9.374949f, 12.1695852f, 9.0051f, 9.632526f,
        6.532955f, 5.73545742f, 6.32546043f, 6.595407f, 7.20781565f, 7.704394f, 7.43434668f, 7.17118073f, 7.705544f, 7.001692f,
        7.561135f, 7.69281769f, 8.33952f, 7.824593f, 8.728587f, 7.92537451f, 5.77092266f, 6.476704f, 10.7498369f, 13.0168161f,
        10.9852219f, 9.019096f, 10.1877041f, 10.3199415f, 10.6285257f, 11.7753744f, 9.072178f, 8.743753f, 7.515195f, 12.0192528f,
        12.7280073f, 11.3422575f, 9.724896f, 9.076415f, 11.7984114f, 12.7737885f, 11.3322716f, 11.0272093f, 11.20026f, 11.7703657f,
        8.978622f, 7.705157f, 7.666496f, 7.33771f, 6.25616932f, 5.646655f, 10.87871f, 9.835959f, 9.817955f, 8.70836449f,
        9.21251f, 7.765107f, 8.566074f, 8.966052f, 11.0468054f, 11.9145288f, 8.387359f, 6.951671f, 6.48209333f, 5.054268f,
        13.47532f, 14.6963062f, 11.9078541f, 11.3912392f, 9.83846951f, 9.522976f, 7.43072748f, 8.368063f, 8.633139f, 8.828459f,
        7.203715f, 7.076044f, 8.410646f, 8.43921f, 13.2245169f, 14.2452984f, 6.18817f, 3.61405182f, 7.031453f, 10.0289736f,
        9.169819f, 8.074174f, 7.474008f, 7.745969f, 11.1031141f, 14.0483093f, 14.4996147f, 14.6200066f, 11.0577726f, 8.01127052f,
        7.31376076f, 7.8728466f, 7.36884975f, 6.65057325f, 7.182408f, 6.77727842f, 6.48388243f, 5.335348f, 10.2329454f, 11.2717867f,
        7.711068f, 5.851822f, 8.054192f, 9.983106f, 10.2512035f, 10.4137669f, 12.9178076f, 11.4710884f, 11.3175163f, 10.2625828f,
        9.352354f, 9.07228f, 7.16895533f, 6.476278f, 10.7400093f, 12.9485712f, 9.39293f, 9.061903f, 6.142538f, 6.71979761f,
        7.14555264f, 6.111019f, 6.27088833f, 5.360312f, 7.176947f, 8.378785f, 11.2465248f, 9.381913f, 10.0934858f, 10.1970367f,
        6.757564f, 5.685285f, 8.238156f, 9.18392849f, 9.333111f, 9.090911f, 7.811283f, 7.477706f, 7.84657f, 7.54958534f,
        8.847138f, 9.056249f, 9.337827f, 8.638124f, 10.0819092f, 9.77566051f, 9.301533f, 8.1619215f, 9.074822f, 10.1034231f,
        9.806437f, 9.39126f, 10.0313768f, 6.69491768f, 13.1832123f, 15.3997269f, 9.348717f, 8.376717f, 7.853314f, 7.17746639f,
        11.9448242f, 12.520236f, 11.4546318f, 11.4232187f, 8.904088f, 10.8318768f, 10.5315342f, 9.38553f, 11.7050018f, 12.9323854f,
        13.4061184f, 13.0048857f, 9.186532f, 8.658706f, 9.82279f, 11.848856f, 11.8140631f, 11.0169783f, 10.13799f, 9.467898f,
        9.905421f, 9.463475f, 8.9256f, 8.691712f, 8.322581f, 9.1868f, 5.12626362f, 4.13368464f, 6.3008666f, 12.5020342f,
        7.593954f, 4.556871f, 8.687982f, 10.9753647f, 13.3270636f, 14.3848581f, 9.503859f, 5.663978f, 5.71436453f, 5.32664871f,
        8.908282f, 10.1439772f, 10.722023f, 11.6858969f, 9.907799f, 9.152694f, 6.48601866f, 7.10793924f, 8.106895f, 8.815224f,
        10.1962481f, 11.5427952f, 8.137266f, 5.65837f, 8.462489f, 13.7762432f, 5.759045f, 5.92578268f, 8.58038f, 12.6111174f,
        10.980196f, 10.2077179f, 12.7509546f, 14.1881123f, 8.88969f, 9.801778f, 6.797268f, 6.825137f, 9.531918f, 11.1068716f,
        9.474799f, 8.346245f, 7.9926405f, 8.722983f, 9.297276f, 10.0374537f, 8.735031f, 8.722564f, 11.151577f, 13.67741f,
        8.959245f, 7.74996567f, 8.829294f, 10.454442f, 7.34859562f, 6.57432842f, 5.667941f, 4.8267436f, 7.615597f, 8.960465f,
        11.6258373f, 11.40574f, 8.57423f, 6.24290133f, 10.2440042f, 11.2479858f, 7.8932786f, 5.4830265f, 6.99544239f, 8.405367f,
        10.437686f, 13.8441715f, 9.157344f, 7.36790228f, 5.01566648f, 4.276373f, 8.127032f, 9.28669548f, 5.41362429f, 4.26837444f,
        8.193806f, 10.87016f, 13.3394051f, 14.5648127f, 11.7727718f, 10.6202106f, 10.5995522f, 12.4308691f, 10.7809725f, 10.5500536f,
        9.246426f, 8.045236f, 8.265938f, 7.503316f, 8.73434f, 8.941216f, 9.982988f, 8.493421f, 9.723566f, 11.5748806f,
        6.81899643f, 5.69911766f, 5.529985f, 5.635703f, 5.159455f, 4.84384727f, 7.703662f, 11.8220863f, 11.2968588f, 7.4641695f,
        11.7722139f, 12.4569187f, 9.083808f, 8.899613f, 9.465927f, 10.92677f, 9.484934f, 9.853532f, 8.385763f, 7.26417732f,
        10.8897114f, 11.3045168f, 7.704657f, 7.14858341f, 8.268836f, 9.17461f, 5.805969f, 4.65484476f, 8.529572f, 11.7284193f,
        8.259275f, 7.339373f, 9.534581f, 10.6967926f, 7.41305256f, 5.46042061f, 5.33613348f, 4.32990551f, 6.717036f, 9.367856f,
        8.186221f, 9.87832451f, 9.040453f, 10.596981f, 8.440392f, 8.023598f, 8.238033f, 7.125773f, 7.62159f, 8.261264f,
        6.9769206f, 5.04092836f, 6.65823555f, 8.817394f, 8.536109f, 9.748165f, 8.427744f, 6.091155f, 6.826138f, 5.88292027f,
        4.85536f, 6.04811f, 6.988688f, 10.1269617f, 7.9002223f, 9.147598f, 5.99986362f, 3.873387f, 7.97417831f, 9.040461f,
        6.77243376f, 5.54342937f, 10.0490322f, 11.7584076f, 14.0591345f, 0f
    };

        private float[] visualizationDataB_ = new float[852]
        {
        15.0140009f, 18.2516022f, 12.5638771f, 8.47725f, 8.508511f, 8.80841f, 9.385352f, 10.5339651f, 10.1521988f, 9.203596f,
        8.199459f, 9.064699f, 8.573203f, 8.235428f, 7.87595367f, 9.116495f, 10.9985762f, 13.38248f, 9.870238f, 7.432283f,
        7.631716f, 7.841748f, 10.0539417f, 11.2695789f, 10.480361f, 6.692911f, 7.289775f, 8.487382f, 7.385195f, 6.193874f,
        7.395525f, 9.539341f, 8.863859f, 10.8821182f, 8.507629f, 10.2875519f, 6.304693f, 5.62920046f, 7.66619539f, 10.3291216f,
        9.591207f, 9.891573f, 8.77846f, 7.062988f, 7.496528f, 9.11634f, 11.1676188f, 13.8784952f, 9.510484f, 6.21900558f,
        8.025873f, 9.023522f, 11.3619909f, 10.5178871f, 10.4830837f, 12.3589659f, 9.098326f, 5.766661f, 7.332186f, 9.107253f,
        8.796639f, 7.45315647f, 6.757488f, 5.610499f, 5.306737f, 7.22915936f, 6.587005f, 8.543048f, 7.09956026f, 5.321173f,
        5.81053352f, 6.494467f, 8.960256f, 7.639092f, 7.478792f, 5.20687437f, 5.79099655f, 5.65617371f, 6.670215f, 7.29052067f,
        8.234551f, 9.887408f, 7.53804874f, 6.01946735f, 5.30232f, 6.16307068f, 8.298391f, 12.7337914f, 10.5748739f, 9.030834f,
        9.326284f, 10.5560389f, 9.309415f, 8.250623f, 9.098035f, 11.2830534f, 8.383707f, 4.360986f, 5.98929834f, 8.532837f,
        7.76153326f, 6.661374f, 5.38767242f, 8.77446651f, 6.70695f, 5.05873346f, 5.90732145f, 8.008912f, 6.04415846f, 6.436973f,
        7.21368837f, 11.5042753f, 10.2617188f, 9.196633f, 9.211837f, 10.9591808f, 9.096318f, 6.220568f, 5.87002f, 6.49581861f,
        7.32647562f, 11.0339689f, 11.0016108f, 17.1271725f, 13.0969324f, 8.284712f, 6.97715425f, 7.34771633f, 6.914519f, 6.29895449f,
        5.9847064f, 6.34321833f, 6.50622749f, 7.932095f, 6.148209f, 6.23085833f, 6.800038f, 9.343051f, 8.560859f, 9.007885f,
        8.381456f, 9.979608f, 8.963464f, 8.620498f, 6.270306f, 6.347699f, 7.367671f, 10.92739f, 8.836475f, 7.0350976f,
        6.41184473f, 6.10768366f, 7.013114f, 9.202678f, 8.489874f, 8.054235f, 6.4818716f, 7.92214346f, 6.475737f, 10.9541893f,
        7.790395f, 9.443398f, 9.096771f, 5.449846f, 5.78988838f, 6.01023531f, 8.08688f, 8.096045f, 9.646424f, 9.72658348f,
        9.291204f, 8.857026f, 11.6248646f, 14.7195539f, 13.5644836f, 14.2444439f, 9.1975565f, 4.70224857f, 5.88677549f, 9.060241f,
        6.64576674f, 4.755243f, 7.63410664f, 11.127656f, 9.714055f, 8.464981f, 12.4099236f, 18.2680035f, 11.2510986f, 4.716764f,
        5.6619277f, 7.38194942f, 8.655922f, 9.796923f, 9.848503f, 8.291042f, 8.388091f, 9.376385f, 9.152726f, 8.24611f,
        8.647272f, 10.3364315f, 6.40285063f, 3.573299f, 5.891491f, 9.093829f, 8.019679f, 7.793945f, 9.054313f, 12.2861223f,
        11.164155f, 10.5087738f, 10.7660341f, 9.057006f, 9.594761f, 8.486596f, 9.394912f, 10.8756523f, 8.24078751f, 9.304618f,
        10.0260658f, 10.7712011f, 8.943189f, 5.523695f, 6.40135956f, 8.559204f, 9.19732952f, 9.609742f, 9.339508f, 8.054134f,
        5.898392f, 5.039111f, 5.5551343f, 6.68316f, 6.172666f, 6.573064f, 8.21065f, 10.4402809f, 8.05148f, 9.02063f,
        9.708333f, 11.696619f, 8.650802f, 4.960537f, 5.4390707f, 6.338781f, 7.44680262f, 7.29197359f, 5.709136f, 5.48593235f,
        5.861405f, 7.676071f, 8.632756f, 9.558763f, 7.57483959f, 6.521602f, 5.407861f, 6.7865f, 7.22039652f, 6.483744f,
        7.963923f, 8.616681f, 8.368673f, 6.666815f, 6.39061165f, 9.02816f, 9.732313f, 14.2055912f, 9.252616f, 4.799364f,
        5.626739f, 8.30055f, 8.51276f, 11.3355f, 9.590131f, 9.399612f, 8.872215f, 10.6626558f, 9.443065f, 10.1839352f,
        9.938395f, 11.1384811f, 8.748583f, 6.43789f, 7.407226f, 7.530582f, 6.305375f, 5.580943f, 5.562764f, 6.805325f,
        6.81059837f, 9.51705f, 8.050644f, 8.108353f, 7.10203552f, 7.30554962f, 4.74818659f, 3.84580326f, 5.39737749f, 8.992111f,
        9.163179f, 11.6580181f, 10.2004242f, 8.318237f, 7.55616236f, 8.317468f, 8.050596f, 8.607801f, 7.51669645f, 9.602281f,
        7.75767136f, 4.891836f, 4.71838427f, 7.716742f, 5.481625f, 4.251678f, 4.54718351f, 6.022478f, 5.984346f, 10.5462456f,
        8.207558f, 6.22845459f, 7.74546766f, 10.7948837f, 8.650802f, 6.56211758f, 9.393324f, 10.207345f, 9.261847f, 8.154385f,
        8.363604f, 7.898142f, 7.819001f, 9.288317f, 10.9754925f, 13.7418976f, 10.5318451f, 7.443831f, 7.13164043f, 7.892163f,
        8.961134f, 11.4651489f, 9.019945f, 7.01110125f, 6.755573f, 6.788233f, 7.36966228f, 8.625157f, 9.310372f, 8.868192f,
        8.332428f, 9.494809f, 6.85398531f, 4.634153f, 5.852314f, 8.926229f, 7.70027447f, 7.69098949f, 8.338266f, 9.9045f,
        9.783197f, 10.7745342f, 9.100369f, 6.791345f, 7.624626f, 14.5508747f, 9.122847f, 7.972733f, 8.04056549f, 8.336306f,
        9.248058f, 10.5065918f, 10.5522156f, 10.4776039f, 12.5444708f, 16.3437023f, 13.7533817f, 9.13935852f, 9.812128f, 10.8792992f,
        10.9362974f, 14.8985214f, 13.8014126f, 8.961431f, 9.783925f, 10.9884253f, 12.8758345f, 15.4682417f, 11.3231573f, 8.479301f,
        10.082263f, 10.9662008f, 10.8464651f, 9.479943f, 11.2661161f, 11.5224886f, 10.1691866f, 9.724558f, 8.514922f, 8.764312f,
        8.61407852f, 8.010963f, 8.898521f, 8.670229f, 8.369132f, 8.269442f, 10.2982693f, 13.6730862f, 11.5552711f, 8.802649f,
        10.27658f, 12.5750666f, 11.6286821f, 12.3094721f, 11.1806049f, 9.889671f, 9.16401f, 10.1573238f, 10.3920059f, 11.35623f,
        11.4152632f, 13.5439148f, 13.2142477f, 13.8730516f, 12.3389339f, 10.4971733f, 10.8704662f, 10.742425f, 8.720474f, 5.48295259f,
        7.88085127f, 11.5510378f, 9.838182f, 8.9874f, 7.625723f, 7.43742561f, 5.842594f, 4.850548f, 6.607924f, 8.918306f,
        8.929933f, 8.933896f, 7.97471237f, 7.21613741f, 8.769183f, 9.43484f, 8.542657f, 7.52405f, 6.84457254f, 5.70705128f,
        7.131765f, 11.6823292f, 10.3998375f, 9.260478f, 9.388485f, 10.1032152f, 10.5453453f, 11.9324617f, 10.2992048f, 9.600776f,
        8.45534f, 6.9011364f, 6.643812f, 6.62479973f, 7.793637f, 10.7516432f, 10.0245924f, 8.417759f, 8.090431f, 8.595225f,
        9.936051f, 13.0706158f, 11.2719746f, 9.321836f, 8.992218f, 7.86856461f, 6.50570154f, 5.072451f, 6.55093765f, 9.009887f,
        7.777266f, 7.4392786f, 5.96083f, 4.454698f, 5.31847f, 6.760879f, 7.48535061f, 11.2432957f, 9.629614f, 8.70193f,
        8.592456f, 9.256881f, 8.343718f, 7.677421f, 6.84229565f, 5.83992147f, 7.420854f, 9.076322f, 8.699323f, 9.078047f,
        7.42717648f, 5.68429232f, 5.17026424f, 4.5179615f, 6.35251f, 8.990068f, 8.360589f, 7.55704927f, 7.816052f, 8.170412f,
        8.057453f, 8.731488f, 8.949178f, 9.85273f, 9.701929f, 6.98128462f, 8.299416f, 10.1418343f, 9.10358f, 10.8995924f,
        10.9088573f, 15.7000866f, 9.004594f, 5.271332f, 7.274054f, 9.09666f, 7.57002974f, 5.586954f, 6.09591436f, 6.576679f,
        7.639019f, 8.101359f, 10.3104916f, 17.9256439f, 15.0030756f, 7.93729448f, 8.891f, 10.0742817f, 8.757164f, 8.70933f,
        7.586634f, 5.52145338f, 5.306035f, 5.28535f, 6.890547f, 9.951067f, 8.986033f, 7.538283f, 6.106967f, 4.927737f,
        6.623131f, 9.38314f, 8.977006f, 6.49145126f, 6.903422f, 8.456545f, 8.506589f, 5.903464f, 6.903043f, 7.76652527f,
        8.131335f, 9.33562851f, 8.624469f, 5.363227f, 6.741636f, 7.507578f, 7.438589f, 6.273068f, 6.653698f, 6.28935528f,
        7.84821224f, 9.864152f, 8.89113f, 8.455652f, 9.107253f, 9.728689f, 7.33518457f, 6.07999754f, 6.070315f, 7.30522251f,
        7.421746f, 6.02964354f, 5.43693972f, 5.55768442f, 6.13008976f, 8.423994f, 8.422291f, 9.050178f, 7.947068f, 6.093069f,
        6.55003262f, 8.871341f, 9.250497f, 8.225693f, 8.161495f, 8.820419f, 7.67036963f, 8.222788f, 9.16457748f, 11.2462692f,
        12.7512321f, 15.6233f, 13.5247726f, 6.340222f, 6.53616667f, 9.186788f, 8.971838f, 10.1473713f, 8.82322f, 6.82013845f,
        7.12146759f, 10.8207006f, 10.0140133f, 12.0638046f, 9.238189f, 6.15211344f, 7.562525f, 12.2770615f, 10.4919825f, 8.41699f,
        8.19993f, 7.315543f, 5.950633f, 5.35815239f, 8.139396f, 11.941658f, 12.2016754f, 8.914986f, 6.587797f, 4.78847647f,
        7.99976349f, 12.578455f, 9.957322f, 7.89245939f, 9.859989f, 12.9574251f, 11.97703f, 8.402372f, 10.4043684f, 11.0505381f,
        13.4202852f, 17.2180252f, 11.3199644f, 5.840454f, 7.534464f, 10.4835358f, 7.95515442f, 9.777335f, 8.852094f, 7.716837f,
        9.33848f, 10.490015f, 9.095929f, 7.335878f, 8.270419f, 7.93747759f, 7.341277f, 6.237283f, 7.45854759f, 9.229187f,
        9.376162f, 8.328165f, 7.947977f, 7.392328f, 7.870879f, 8.982476f, 8.757755f, 9.249582f, 8.263454f, 7.47444868f,
        9.572146f, 13.8448648f, 10.3663464f, 8.486131f, 8.842789f, 6.334006f, 6.735874f, 7.02868938f, 8.429449f, 8.466105f,
        8.987088f, 8.960655f, 7.01393557f, 6.2460556f, 7.629008f, 9.646762f, 10.2256641f, 13.8318748f, 10.0447216f, 7.53363848f,
        6.723441f, 5.24569273f, 5.64255047f, 8.816127f, 7.474021f, 6.0546875f, 6.42045641f, 9.660697f, 7.207882f, 7.9123764f,
        7.057218f, 6.538732f, 8.175489f, 11.1932421f, 11.9765053f, 10.4515944f, 10.7261324f, 14.319993f, 9.466486f, 5.191817f,
        7.685528f, 10.9804478f, 11.6954031f, 10.19344f, 8.403766f, 6.92898464f, 6.06283474f, 4.35953665f, 6.32349062f, 9.985842f,
        12.3991795f, 15.7586231f, 14.86657f, 5.66680765f, 7.54644966f, 10.5265408f, 9.052988f, 6.37234926f, 6.29108953f, 5.58257246f,
        6.478816f, 10.6975069f, 11.2810888f, 9.820472f, 9.347968f, 7.085227f, 8.049697f, 10.6893673f, 9.925143f, 7.71786261f,
        8.735638f, 9.439276f, 7.74154f, 9.524316f, 8.48877f, 7.73743248f, 7.51825666f, 7.416803f, 6.292996f, 5.84259272f,
        7.32388926f, 8.807346f, 8.648787f, 9.090307f, 8.498122f, 6.467321f, 8.426131f, 10.9409609f, 11.0908327f, 10.0753355f,
        10.209651f, 10.7442284f, 8.421279f, 4.29232645f, 5.48358631f, 7.451539f, 6.49821043f, 5.8854413f, 5.15724468f, 5.09060669f,
        4.96049547f, 7.85651731f, 8.021567f, 8.917797f, 6.80487633f, 5.24072075f, 6.62187767f, 10.4348536f, 9.46001148f, 7.97590351f,
        7.32195854f, 8.302658f, 6.93737364f, 5.78219f, 6.27503347f, 10.7701473f, 9.037276f, 8.165239f, 8.544495f, 9.302863f,
        8.504349f, 6.93785143f, 6.14570951f, 8.755873f, 9.375635f, 10.2279959f, 11.3103695f, 14.9211178f, 13.6299343f, 11.4204884f,
        11.5536823f, 11.2739124f, 9.109911f, 7.0307126f, 7.57155657f, 9.806668f, 10.6484289f, 11.0857964f, 10.5846958f, 10.2198668f,
        10.4868f, 14.4281378f, 13.2725592f, 10.4606419f, 11.1312265f, 15.9719133f, 10.7178192f, 9.227214f, 9.702579f, 9.926228f,
        8.30962f, 6.1503396f, 7.39524269f, 10.9456234f, 8.12422f, 7.26512241f, 7.078701f, 6.95139265f, 8.094821f, 9.762616f,
        10.798008f, 11.63958f, 11.4089556f, 7.69436264f, 7.77179575f, 10.355608f, 10.4233027f, 11.7092838f, 12.6125278f, 11.3982592f,
        10.98545f, 12.0566626f, 11.1218624f, 12.6714249f, 11.8850117f, 10.9486933f, 7.635345f, 1.8852607f, 2.27907681f, 3.116917f,
        2.67814469f, 1.60204029f
        };

        private Vector2 position_ = new Vector2(120f, 600f);

		private float dWidth_;

		private float dHeight_;

		private float equalizerHeight_;

		private float[] freqHeights_ = new float[16];

		private float startingHue_;

		private float startingHueRate_ = 1080f;

		private float bpmTimer_;

        private float shiftTimer_;

        private int visualizationIndex_;

        private bool isVisualizationA_;

        private bool rainbowed_ = false;

		public Equalizer()
		{
			this.dWidth_ = Global.equalizerBar.Width + 2;
			this.dHeight_ = Global.equalizerBar.Height + 2;
			this.equalizerHeight_ = (int)(576f / this.dHeight_);
			this.visualizationData_ = new VisualizationData();
		}

		public void Update(float dt)
		{
			if (!this.visible_)
			{
				return;
			}
            MediaPlayer.GetVisualizationData(this.visualizationData_);
			for (int i = 0; i < 16; i++)
			{
				this.freqHeights_[i] = 0f;
				for (int j = 0; j < 16; j++)
				{
					this.freqHeights_[i] += this.visualizationData_.Frequencies[i * 16 + j];
				}
				this.freqHeights_[i] *= 0.0625f;
				this.freqHeights_[i] *= this.equalizerHeight_;
				this.freqHeights_[i] -= 10f;
				this.freqHeights_[i] *= 1.15f;
			}
            shiftTimer_ += dt;
            if (shiftTimer_ > 0.05f)
            {
                shiftTimer_ -= 0.05f;
                for (int i = 0; i < 15; i++)
                {
                    freqHeights_[i] = freqHeights_[i + 1];
                }
                if (isVisualizationA_)
                {
                    freqHeights_[15] = visualizationDataA_[visualizationIndex_ % visualizationDataA_.Length];
                }
                else
                {
                    freqHeights_[15] = visualizationDataB_[visualizationIndex_ % visualizationDataB_.Length];
                }
                visualizationIndex_++;
            }
            if (this.rainbowed_)
			{
				this.startingHue_ += this.startingHueRate_ * dt;
				if (this.startingHue_ < 0f)
				{
					this.startingHue_ = 0f;
					this.startingHueRate_ = 0f - this.startingHueRate_;
				}
				if (this.startingHue_ > 360f)
				{
					this.startingHue_ = 360f;
					this.startingHueRate_ = 0f - this.startingHueRate_;
				}
			}
			else
			{
				this.bpmTimer_ += dt;
				if (this.bpmTimer_ > 0.333333343f)
				{
					this.bpmTimer_ -= 0.333333343f;
					this.startingHue_ += 90f;
					this.startingHue_ %= 360f;
				}
			}
		}

		public void Draw(SpriteBatch spriteBatch)
		{
			if (!this.visible_)
			{
				return;
			}
			for (int i = 0; i < this.freqHeights_.Length; i++)
			{
				int num = (int)this.freqHeights_[i];
				for (int j = 0; j < num; j++)
				{
					if (this.rainbowed_)
					{
						spriteBatch.Draw(Global.equalizerBar, this.position_ + new Vector2(this.dWidth_ * (float)i, (0f - this.dHeight_) * (float)j), Equalizer.GetColor((this.startingHue_ + 22.5f * (float)i + (float)j / this.equalizerHeight_ * 360f) % 360f));
					}
					else
					{
						spriteBatch.Draw(Global.equalizerBar, this.position_ + new Vector2(this.dWidth_ * (float)i, (0f - this.dHeight_) * (float)j), Equalizer.GetColor((this.startingHue_ + 11.25f * (float)i + (float)j / this.equalizerHeight_ * 180f) % 360f));
					}
				}
			}
		}

		public void TurnOn(bool rainbowed, bool isVisualizationA)
		{
			this.visible_ = true;
			this.rainbowed_ = rainbowed;
			this.startingHue_ = 0f;
			this.bpmTimer_ = 0f;
            isVisualizationA_ = isVisualizationA;
            shiftTimer_ = 0f;
            visualizationIndex_ = 0;
        }

		public void TurnOff()
		{
			this.visible_ = false;
		}

        public void ChangeRainbow(bool rainbowed)
        {
            visible_ = true;
            rainbowed_ = rainbowed;
            startingHue_ = 0f;
            bpmTimer_ = 0f;
        }

        private static Color GetColor(float hue)
		{
			Vector3 one = Vector3.One;
			if (hue < 0f)
			{
				return new Color(new Vector4(Color.White.ToVector3(), 0f));
			}
			if (hue <= 60f)
			{
				one.X = 1f;
				one.Y = hue / 60f;
				one.Z = 0f;
			}
			else if (hue <= 120f)
			{
				one.Y = 1f;
				one.X = 2f - hue / 60f;
				one.Z = 0f;
			}
			else if (hue <= 180f)
			{
				one.Y = 1f;
				one.Z = hue / 60f - 2f;
				one.X = 0f;
			}
			else if (hue <= 240f)
			{
				one.Z = 1f;
				one.Y = 4f - hue / 60f;
				one.X = 0f;
			}
			else if (hue <= 300f)
			{
				one.Z = 1f;
				one.X = hue / 60f - 4f;
				one.Y = 0f;
			}
			else
			{
				one.X = 1f;
				one.Z = 6f - hue / 60f;
				one.Y = 0f;
			}
			return new Color(one);
		}
	}
}
